function trainNN()
%Neural network to recognize several geometrical shapes

clc;

%%Image processing
IMG_RES = [25 25];


for i=1:5
    img = imread(sprintf('start/circle/circle-start-%d.png', i));
    img = imresize(img, IMG_RES);
    binarizedImg = imbinarize(img);
    circle = reshape(binarizedImg, 1, []);
end

for i=1:5
    img = imread(sprintf('start/triangle/triangle-start-%d.png', i));
    img = imresize(img, IMG_RES);
    binarizedImg = imbinarize(img);
    triangle = reshape(binarizedImg, 1, []);
end

for i=1:5
    img = imread(sprintf('start/trapezoid/trapezoid-start-%d.png', i));
    img = imresize(img, IMG_RES);
    binarizedImg = imbinarize(img);
    trapezoid = reshape(binarizedImg, 1, []);
end

for i=1:5
    img = imread(sprintf('start/square/square-start-%d.png', i));
    img = imresize(img, IMG_RES);
    binarizedImg = imbinarize(img);
    square = reshape(binarizedImg, 1, []);
end

for i=1:5
    img = imread(sprintf('start/parallelogram/parallelogram-start-%d.png', i));
    img = imresize(img, IMG_RES);
    binarizedImg = imbinarize(img);
    parallelogram = reshape(binarizedImg, 1, []);
end

for i=1:5
    img = imread(sprintf('start/kite/kite-start-%d.png', i));
    img = imresize(img, IMG_RES);
    binarizedImg = imbinarize(img);
    kite = reshape(binarizedImg, 1, []);
end
%%Train network
%%net = feedforwardnet([10]);


%%Simulate and analyse the results

end